name: WebApp Demo

on:
  push:
    branches:
      - 'main'
      - 'dev'

env:
  IMAGE_NAME_main: mbwebapp-main
  IMAGE_NAME_dev: mbwebapp-dev
  AZURE_ENDPOINT: ${{ secrets.AZURE_ENDPOINT }}
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
jobs:
  unit-test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker environment
        uses: docker/setup-buildx-action@v2
        
      - name: Build Docker Image
        env:
          FLASK_OUTPUT_DIR: /app/outputs
        run: docker build --build-arg FLASK_OUTPUT_DIR=$FLASK_OUTPUT_DIR -t ${{ env.IMAGE_NAME_main }} .

      - name: Run Docker Container
        run: docker run -d --name ${{ env.IMAGE_NAME_main }} -p 5000:5000 ${{ env.IMAGE_NAME_main }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./tests/requirements.txt

          - name: Run Unit Tests
          env:
            TEST_ENDPOINT: ${{ vars.TEST_ENDPOINT }}
            TEST_URL: ${{ vars.TEST_URL }}
          run: pytest ./tests

  build-main:
    name: Build-main
    runs-on: ubuntu-latest
    needs: unit-test  # Only run after unit-test passes
    if: github.ref_name == 'main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker environment
        uses: docker/setup-buildx-action@v2

      - name: Login into registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.AZURE_ACR_ENDPOINT }}
          username: ${{ secrets.AZURE_CLIENT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Build & Push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.AZURE_ACR_ENDPOINT }}/${{ env.IMAGE_NAME_main }}:${{ github.sha }}
            ${{ secrets.AZURE_ACR_ENDPOINT }}/${{ env.IMAGE_NAME_main }}:latest
          build-args: |
            FLASK_OUTPUT_DIR: /home 

  build-dev:
    name: Build-dev
    runs-on: ubuntu-latest
    needs: unit-test  # Only run after unit-test passes
    if: github.ref_name == 'dev'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login into registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.AZURE_ACR_ENDPOINT }}
          username: ${{ secrets.AZURE_CLIENT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Build & Push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.AZURE_ACR_ENDPOINT }}/${{ env.IMAGE_NAME_dev }}:${{ github.sha }}
            ${{ secrets.AZURE_ACR_ENDPOINT }}/${{ env.IMAGE_NAME_dev }}:latest
          build-args: |
            FLASK_OUTPUT_DIR: /home 
